MODULE DisplayGrab;
  IMPORT SYSTEM, Display;

  VAR Span: INTEGER;

  PROCEDURE GrabDot*(x, y: INTEGER) : INTEGER;
    VAR a, col: INTEGER;
  BEGIN
    a := Display.Base + (x DIV 8)*4 + y*Span; SYSTEM.GET(a, col);
    col := ASR(col, (x MOD 8) * 4) MOD 10H;
    RETURN col
  END GrabDot;

  PROCEDURE GrabPatternRow*(x, y, w: INTEGER): INTEGER;
    VAR i: INTEGER; s: SET;
  BEGIN
    ASSERT((w > 0) & (w <= 32));
    s := {};
    FOR i := 0 TO w-1 DO
      IF GrabDot(x+i, y) # 0 THEN INCL(s, i) END
    END;
    i := SYSTEM.VAL(INTEGER, s);
    RETURN i
  END GrabPatternRow;

  PROCEDURE CopyColorPattern*(patadr, x, y: INTEGER);
    VAR a, a0, pwd: INTEGER;
      w, h, pbt: BYTE; pix, mask: SET;
  BEGIN SYSTEM.GET(patadr, w); SYSTEM.GET(patadr+1, h); INC(patadr, 2);
    a := Display.Base + (x DIV 8)*4 + y*Span; x := x MOD 8; mask := SYSTEM.VAL(SET, ASR(7FFFFFFFH, 31-(x*4)));
    a0 := a;
    WHILE a0 < a + h * Span DO
      (*build pattern line; w <= 8*)
      SYSTEM.GET(patadr, pbt); INC(patadr); pwd := pbt;
      IF w > 2 THEN SYSTEM.GET(patadr, pbt); INC(patadr); pwd := pbt*100H + pwd;
        IF w > 4 THEN SYSTEM.GET(patadr, pbt); INC(patadr); pwd := pbt*10000H + pwd;
          IF w > 6 THEN SYSTEM.GET(patadr, pbt); INC(patadr); pwd := pbt*1000000H + pwd END
        END
      END ;
      SYSTEM.GET(a0, pix);
      SYSTEM.PUT(a0, SYSTEM.VAL(SET, LSL(pwd, x * 4)) + pix);
      IF x + w > 8 THEN (*spill over*)
        SYSTEM.GET(a0+4, pix);
        SYSTEM.PUT(a0+4, SYSTEM.VAL(SET, ASR(pwd, -(x * 4))) * mask + pix)
      END;
      INC(a0, Span)
    END
  END CopyColorPattern;

  PROCEDURE GetPalette*(col: INTEGER; VAR val: INTEGER);
  BEGIN
    SYSTEM.GET(-128 + col * 4, val);
  END GetPalette;

  PROCEDURE SetPalette*(col, val: INTEGER);
  BEGIN
    SYSTEM.PUT(-128 + col * 4, val)
  END SetPalette;

BEGIN Span := 512
END DisplayGrab.
