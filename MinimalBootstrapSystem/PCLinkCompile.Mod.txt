MODULE PCLinkCompile;
  IMPORT SYSTEM, Files, Display, Texts, Oberon;

  CONST data = -56; stat = -52;
    REQ = 20H; REC = 21H; ACK = 10H; NAK = 11H;

  VAR T: Oberon.Task;
    W: Texts.Writer;
    FR: Display.Frame;

  PROCEDURE Rec(VAR x: BYTE);
  BEGIN
    REPEAT UNTIL SYSTEM.BIT(stat, 0);
    SYSTEM.GET(data, x)
  END Rec;

  PROCEDURE RecName(VAR s: ARRAY OF CHAR);
    VAR i: INTEGER; x: BYTE;
  BEGIN i := 0; Rec(x);
    WHILE x > 0 DO s[i] := CHR(x); INC(i); Rec(x) END ;
    s[i] := 0X
  END RecName;

  PROCEDURE Send(x: BYTE);
  BEGIN
    REPEAT UNTIL SYSTEM.BIT(stat, 1);
    SYSTEM.PUT(data, x)
  END Send;

  PROCEDURE Task;
    VAR len, i: INTEGER;
      x, ack, code: BYTE;
      name: ARRAY 32 OF CHAR;
      F: Files.File; R: Files.Rider;
      buf: ARRAY 256 OF BYTE;
  BEGIN
    IF  SYSTEM.BIT(stat, 0) THEN (*byte available*)
      Rec(code);
        IF code = REC THEN (*receive file*)
          LED(30H); RecName(name); F := Files.New(name);
          IF F # NIL THEN
            Texts.WriteString(W, "receiving "); Texts.WriteString(W, name);
            Texts.Append(Oberon.Log, W.buf);
            Files.Set(R, F, 0); Send(ACK);
            REPEAT Rec(x); len := x; i := 0;
              WHILE i < len DO Rec(x); buf[i] := x; INC(i) END ;
              i := 0;
              WHILE i < len DO Files.WriteByte(R, buf[i]); INC(i) END ;
              Send(ACK)
            UNTIL len < 255;
            Files.Register(F); Send(ACK);
            Texts.WriteString(W, " done"); Texts.WriteLn(W); Texts.Append(Oberon.Log, W.buf);
            i := 0;
            WHILE name[i] # 0X DO INC(i) END;
            IF (i > 4) & (name[i-4] = ".") & (name[i-3] = "M") & (name[i-2] = "o") & (name[i-1] = "d") THEN
              Texts.WriteString(W, "ORP.Compile "); Texts.Append(Oberon.Log, W.buf);
              Oberon.SetPar(FR, Oberon.Log, Oberon.Log.len);
              Texts.WriteString(W, name); Texts.WriteString(W, "/s ~");Texts.WriteLn(W); Texts.Append(Oberon.Log, W.buf);
              Oberon.Call("ORP.Compile", i);
            END
          ELSE Send(NAK)
          END
        ELSIF code = REQ THEN Send(ACK)
        END ;
      LED(0)
    END
  END Task;

  PROCEDURE Run*;
  BEGIN Oberon.Install(T); Texts.WriteString(W, "PCLinkCompile started");
    Texts.WriteLn(W); Texts.Append(Oberon.Log, W.buf)
  END Run;

BEGIN Texts.OpenWriter(W); NEW(FR); T := Oberon.NewTask(Task, 0)
END PCLinkCompile.
